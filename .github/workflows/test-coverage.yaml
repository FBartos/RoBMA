name: test-coverage

on:
  push:
    branches: [main, master, pre-release]

jobs:
  test-coverage:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}

    steps:
      - uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      # Cache R packages
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-
            ${{ runner.os }}-r-

      # Cache JAGS installation (Windows)
      - name: Cache JAGS (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v3
        with:
          path: C:\Program Files\JAGS
          key: ${{ runner.os }}-jags-4.3.1
          restore-keys: |
            ${{ runner.os }}-jags-

      # Install JAGS on Windows
      - name: Install JAGS (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "C:\Program Files\JAGS\JAGS-4.3.1\bin\jags-terminal.exe" (
            echo "JAGS not found in cache, downloading and installing..."
            curl -o jags-installer.exe -L https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.1.exe/download
            jags-installer.exe /S
            del jags-installer.exe
          ) else (
            echo "JAGS found in cache, skipping installation"
          )

      # Set JAGS environment variables on Windows
      - name: Set JAGS environment variables (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          echo JAGS_ROOT=C:\Program Files\JAGS\JAGS-4.3.1>> %GITHUB_ENV%
          echo JAGS_MAJOR_VERSION=4>> %GITHUB_ENV%
          echo PATH=C:\Program Files\JAGS\JAGS-4.3.1\bin;%PATH%>> %GITHUB_ENV%

      # Set up renv
      - name: Setup renv
        uses: r-lib/actions/setup-renv@v2

      # Install the package
      - name: Install devtools and the RoBMA Package
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          
          # Check if packages are already installed before installing
          required_packages <- c('devtools', 'metaBMA', 'metafor', 'weightr', 'lme4', 'fixest', 'emmeans', 'metadat', 'testthat', 'vdiffr', 'covr', 'pandoc')
          missing_packages <- required_packages[!sapply(required_packages, requireNamespace, quietly = TRUE)]
          
          if (length(missing_packages) > 0) {
            cat("Installing missing packages:", paste(missing_packages, collapse = ", "), "\n")
            install.packages(missing_packages)
          } else {
            cat("All required packages are already installed\n")
          }
          
          devtools::install()
        shell: Rscript {0}

      # Run the coverage check
      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
