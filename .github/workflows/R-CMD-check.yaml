name: R-CMD-check

on:
  push:
    branches: [main, master, pre-release]
  pull_request:
    branches: [main, master, pre-release]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
    steps:
      - uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      # Install JAGS and system dependencies on Linux
      - name: Install System Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            libcurl4-openssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libcairo2-dev \
            jags

      # Install JAGS on Windows
      - name: Install JAGS (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          curl -o jags-installer.exe -L https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.1.exe/download
          jags-installer.exe /S
          del jags-installer.exe

      # Set JAGS environment variables on Windows
      - name: Set JAGS environment variables (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          echo JAGS_ROOT=C:\Program Files\JAGS\JAGS-4.3.1>> %GITHUB_ENV%
          echo JAGS_MAJOR_VERSION=4>> %GITHUB_ENV%
          echo PATH=C:\Program Files\JAGS\JAGS-4.3.1\bin;%PATH%>> %GITHUB_ENV%

      # Install JAGS on macOS and ensure rjags can find its modules
      - name: Install JAGS (macOS)
        if: runner.os == 'macOS'
        run: |
          # Install JAGS via Homebrew
          brew update
          brew install jags

          # Locate the Homebrew installation prefix for jags
          jags_prefix=$(brew --prefix jags)

          # Export useful variables for rjags configure and runtime
          echo "JAGS_PREFIX=${jags_prefix}" >> $GITHUB_ENV
          echo "JAGS_LIBDIR=${jags_prefix}/lib" >> $GITHUB_ENV
          echo "PATH=${jags_prefix}/bin:$PATH" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=${jags_prefix}/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV

          # Create a stable path that rjags might expect (/usr/local/lib/JAGS/modules-*)
          # and point it to the Homebrew-installed JAGS modules so load.module() works.
          sudo mkdir -p /usr/local/lib
          sudo ln -sfn "${jags_prefix}/lib/JAGS" /usr/local/lib/JAGS

          # Pre-install rjags with the detected prefix so configure can find JAGS.
          # This follows the rjags installation advice: pass --with-jags-prefix when needed.
          Rscript -e "install.packages('rjags', configure.args=c('--with-jags-prefix=${jags_prefix}'), repos='https://cloud.r-project.org')"

      # Set up renv
      - name: Setup renv
        uses: r-lib/actions/setup-renv@v2

      # Install the package
      - name: Install devtools and the RoBMA Package
        run: |
          install.packages('devtools')
          install.packages('rcmdcheck')
          install.packages(c('metaBMA', 'metafor', 'weightr', 'lme4', 'fixest', 'emmeans', 'metadat', 'vdiffr', 'testthat', 'covr', 'pandoc'))
          devtools::install()
        shell: Rscript {0}

      - name: Check
        if: runner.os != 'Windows'
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(
            args        = c("--no-manual", "--as-cran", "--ignore-vignettes"),
            build_args  = c("--no-build-vignettes"),
            error_on    = "warning",
            check_dir   = "check")
        shell: Rscript {0}

      - name: Check
        if: runner.os == 'Windows'
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          JAGS_ROOT: "/c/progra~1/JAGS/JAGS-4.3.1"
          JAGS_MAJOR_VERSION: 4
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(
            args        = c("--no-manual", "--as-cran", "--ignore-vignettes"),
            build_args  = c("--no-build-vignettes"),
            error_on    = "warning",
            check_dir   = "check")
        shell: Rscript {0}


      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
